---
################################
# Istio ingress controller
################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-ingress-config
data:
  config.yaml: |-
    telemetry:
    - kind: io.l5d.prometheus
    - kind: io.l5d.recentRequests
      sampleRate: 0.25

    routers:
    - protocol: h2
      identifier:
        kind: io.l5d.k8s.istio-ingress
      interpreter:
        kind: io.l5d.k8s.istio
        experimental: true
      loggers:
        - kind: io.l5d.k8s.istio
      servers:
        - port: 80
          ip: 0.0.0.0
          clearContext: true
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-ingress
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: ignore
      labels:
        istio: ingress
    spec:
      serviceAccountName: istio-ingress-service-account
      volumes:
      - name: istio-ingress-config
        configMap:
          name: "istio-ingress-config"
      containers:
      - name: l5d
        image: buoyantio/linkerd:1.3.6
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        args:
        - /io.buoyant/linkerd/config/config.yaml
        ports:
        - name: http
          containerPort: 80
        - name: admin
          containerPort: 9990
        volumeMounts:
        - name: "istio-ingress-config"
          mountPath: "/io.buoyant/linkerd/config"
          readOnly: true

      - name: kubectl
        image: buoyantio/kubectl:v1.8.5
        args: ["proxy", "-p", "8001"]
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingress
spec:
  selector:
    istio: ingress
  type: LoadBalancer
  ports:
  - name: http
    port: 80
  - name: admin
    port: 9990
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingress-service-account
